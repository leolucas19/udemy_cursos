* {
    font-family: Arial, Helvetica, sans-serif;
}

body {
    padding-bottom: 500px;
    background-color: #000000da;
    color: white;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.596);
}

/* 1 - flex */
.flex {
    display: flex; /* o "flex" vai colocar os elementos lado a lado */
    background-color: #dbdbdb;
    margin-bottom: 20px;
}

/* 2 - flex column */
.flex-column {
    display: flex; /* primeiro aplicar o flex */
    flex-direction: column;
    background-color: #dbdbdb;
    margin-bottom: 20px;
}

/* wrap */
.wrap {
    display: flex;
    flex-wrap: wrap; /* só funciona com a propriedade flexwrap: wrap ativada (organiza em tabelas) */
    margin-bottom: 20px;
    width: 100%;
}

.box {
    height: 40px;
    width: 33%; /* só vai caber 3 divs por largura pois a div ocupa 100% de largura, por tanto dividindo por 3 = 33 */
    border: 1px solid rgba(255, 255, 255, 0.521);
    background-color: red;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.432);
}

/* 4 - justify content */
.center, 
.space-around,
.space-between,
.end
{
    display: flex;
    margin-bottom: 20px;
}

.center .box, 
.space-around .box,
.space-between .box,
.end .box {
    width: 50px;
}

.center {
    justify-content: center; /* centraliza o elemento flex na tela */
}

.space-around {
    justify-content: space-around; /* um espaçamento igual entre os itens e um espaço nas laterais */
}

.space-between {
    justify-content: space-between; /* um espaçamento igual entre os itens sem espaço nas laterais */
}

.end {
    justify-content: end; /* inverte o lado do elemento */
}

/* align items */ 
.align-center,
.flex-end,
.strech
{
    display: flex;
    margin-bottom: 20px;
    height: 200px;
    border: 1px solid blue;
}

.align-center .box, 
.flex-end .box,
.strech .box {
    width: 50px;
}

.align-center {
    align-items: center; /* centraliza no eixo vertical, continua no canto da tela, mas no centro de seu bloco */
}

.flex-end {
    align-items: flex-end; /* fica abaixo no eixo vertical, continua no canto da tela */
}

.strech {
    align-items: stretch; /* ele se alonga no tamanho de seu bloco  */
}

.strech .box {
    height: auto; /* (se tiver uma altura ja determinada ele n obedecera o strech, por tanto se utiliza (height: auto) para deixa-lo livre */
}

/* gap */
.gap {
    display: flex;
    flex-wrap: wrap; /* os itens que excederem o tamanho do conteiner seram movidos para linha de baixo */ 
    justify-content: center;
    border: 2px solid rgb(0, 255, 0);
    gap: 10px; /* para espaçar os gaps dentro do conteiner */
}

.gap .box {
    width: 32%; /* todas as box que estão dentro do gap teram 32% de largura */
}

/* Order */
.order {
    display: flex;
}
/* através do "order" podemos ordenar os itens */
#one {
    order: 1;
}

#two {
    order: 2;
}

#three {
    order: 3;
}

/* grow */
.grow {
    display: flex;
}
/* com o "grow" conseguimos ajustar a proporção dos elementos q estão afetados por "flex" */
.grow .box {
    flex: 1;
}

.grow #big {
    flex: 2;
}

/* basis */
.basis { /* se complementa com o "grow" */
    display: flex;
}

.basis .box {
    flex-basis: 20px;
}

.basis #big {
    flex-grow: 1;
}

/* shrink */
.shrink {
    display: flex;
}

.shrink .box {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 250px;
    width: auto;
}

.shrink .small {
    flex-shrink: 2; /* ele vai diminuir para q os elementos fiquem inteiros na tela ( ele diminui mais q os outros ) */
}

/* shorthand */
.shorthand {
    display: flex;
}

.shorthand .box {
    width: auto;
    flex: 1 1 50px; /* 1 de grow, 1 de shrink e 50px de basis */
}

.shorthand .diferent {
    flex: 3 1 400px;
}


.auto-alignment {
    height: 300px;
    display: flex;
    align-items: end;
    border:  1px solid rgb(0, 60, 255);
}

.auto-alignment .diferent {
    align-self: center; /* essa regra ajuda a alinhar diferente do q esta imposto nos outros elementos */
}